{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/19k41a0516/NNDL/blob/main/SLR\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ao_AYVhM62jT"
      },
      "source": [
        "# WEEK-3 : Linear Regression"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "irwfHGxS62jZ"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZvHVl06hBBVB",
        "outputId": "74d86192-82c5-4f64-c01f-a9a57585a9d4"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "GmUPH2r_62jc",
        "outputId": "293a49e6-bffd-4084-f320-ce458c33b2ca",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   YearsExperience  Salary\n",
              "0              1.1   39343\n",
              "1              1.3   46205\n",
              "2              1.5   37731\n",
              "3              2.0   43525\n",
              "4              2.2   39891"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d3b0dd39-efb4-49d7-a7d5-dfc0e5f7a209\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearsExperience</th>\n",
              "      <th>Salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.1</td>\n",
              "      <td>39343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.3</td>\n",
              "      <td>46205</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.5</td>\n",
              "      <td>37731</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.0</td>\n",
              "      <td>43525</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.2</td>\n",
              "      <td>39891</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3b0dd39-efb4-49d7-a7d5-dfc0e5f7a209')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d3b0dd39-efb4-49d7-a7d5-dfc0e5f7a209 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d3b0dd39-efb4-49d7-a7d5-dfc0e5f7a209');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "data = pd.read_csv('/content/drive/MyDrive/SLR')\n",
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "bsMDDVH662je"
      },
      "outputs": [],
      "source": [
        "X = data['YearsExperience'].values\n",
        "y = data['Salary'].values\n",
        "X = X.reshape(-1,1)\n",
        "y = y.reshape(-1,1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "FchJjpSg62jf",
        "outputId": "5b17a6ab-9561-4258-9be0-6b43e0e007e8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.scatter(X, y, color = 'blue', label='Scatter Plot')\n",
        "plt.title('Relationship between Years of Experience and Salary')\n",
        "plt.xlabel('Years of Experience')\n",
        "plt.ylabel('Salary')\n",
        "plt.legend(loc=0)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "orq4quan62jf"
      },
      "outputs": [],
      "source": [
        "X_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.30, random_state=100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "g9Th_Bni62jg",
        "outputId": "df533a26-33f1-440c-f3cc-85033756824e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "lm = LinearRegression()\n",
        "lm.fit(X_train,y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "wzaOaO-U62jg",
        "outputId": "b92ddeb8-0f56-4626-b90e-2369b162af94",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Estimated model slope, m: [[9731.20383825]]\n",
            "Estimated model intercept, c: (array([25202.88778615]),)\n"
          ]
        }
      ],
      "source": [
        "m = lm.coef_\n",
        "c = lm.intercept_,\n",
        "print(\"Estimated model slope, m:\" , m)\n",
        "print(\"Estimated model intercept, c:\" , c)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "-Fotp34Z62jh"
      },
      "outputs": [],
      "source": [
        "y_pred_train=lm.predict(X_train)\n",
        "y_pred_test=lm.predict(X_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "P5RIDmaZ62ji",
        "outputId": "b070da6a-4e32-44e7-ad7c-3a9dada09108",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.scatter(X_test, y_test, color = 'blue', label='Scatter Plot')\n",
        "plt.plot(X_test, y_pred_test, color = 'black', linewidth=3, label = 'Regression Line')\n",
        "plt.title('Relationship between Years of Experience and Salary')\n",
        "plt.xlabel('Years of Experience')\n",
        "plt.ylabel('Salary')\n",
        "plt.legend(loc=0)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "id": "h6VoVl5t62jj",
        "outputId": "6688fa06-a74e-4d9c-fae8-ec263bfdfd3a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.scatter(X_train, y_train, color = 'blue', label='Scatter Plot')\n",
        "plt.plot(X_train, y_pred_train, color = 'black', linewidth=3, label = 'Regression Line')\n",
        "plt.title('Relationship between Years of Experience and Salary')\n",
        "plt.xlabel('Years of Experience')\n",
        "plt.ylabel('Salary')\n",
        "plt.legend(loc=0)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "q_0cBT-M62jk",
        "outputId": "b4528e8e-5f95-4d07-f9ce-9e4e97fb2b12",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Root mean square error 5807.962456689544\n",
            "Mean square error 33732427.898315236\n",
            "Mean absolute error 4739.749072750417\n"
          ]
        }
      ],
      "source": [
        "import math\n",
        "from sklearn.metrics import mean_squared_error \n",
        "from sklearn.metrics import mean_absolute_error\n",
        "#Training Accuracies\n",
        "rmse = math.sqrt(mean_squared_error(y_train, y_pred_train)) \n",
        "print('Root mean square error', rmse) \n",
        "mse = (mean_squared_error(y_train, y_pred_train)) \n",
        "print('Mean square error', mse) \n",
        "mae=mean_absolute_error(y_train, y_pred_train)\n",
        "print('Mean absolute error', mae)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "Npp5-NcJ62jl",
        "outputId": "f37b1bf1-fe95-4aca-efd2-508633030330",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Root mean square error 5505.479002176146\n",
            "Mean square error 30310299.043402452\n",
            "Mean absolute error 5010.529885004953\n"
          ]
        }
      ],
      "source": [
        "#Testing Accuracies\n",
        "rmse = math.sqrt(mean_squared_error(y_test, y_pred_test)) \n",
        "print('Root mean square error', rmse) \n",
        "mse = (mean_squared_error(y_test, y_pred_test)) \n",
        "print('Mean square error', mse) \n",
        "mae=mean_absolute_error(y_test, y_pred_test)\n",
        "print('Mean absolute error', mae)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "8cHSEdKQ62jn",
        "outputId": "06aa625d-e679-474f-bd78-f057b47ab9ae",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAEICAYAAACuxNj9AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3df7xVdZ3v8ddbRBjUSVQyAuFgg00wGcQZFWtKyx/4o7AeOeI9NWQ1XKeoKaereLlzpXuzR1Zz7XKn0XD6YRNlZpqolaE3s1v54zAxiD+Io0IcQjkejSwUQT73j/U9uM5hH/YB9q+19/v5eOzHXuuzvmvt7177nP3Za32/a30VEZiZme3JAfWugJmZNT4nCzMzK8vJwszMynKyMDOzspwszMysLCcLMzMry8nCrARJHZJ+vIfld0v6UAVe52RJ3fu7HbNqc7KwwpO0TtLzkv4g6UlJX5d0yP5sMyKWRsTplaqjWdE5WVizeEdEHAJMA6YDl9W5PjUnadiA+QP3cv29Km+txcnCmkpEPAncQZY0AJB0oqRfSPqdpP+QdHJu2fslPS7pOUlPSOrIxf9frtxpkh6VtEXSPwPKLVsk6Zu5+TZJ0fflK+lCSY+k13hc0n8e6vuR9OeSlkt6RtIaSX+dW/Z1SVdL+oGkPwKnpKOsSyWtAv4o6UBJ75T0UHr/d0t6XW4bpcpfKmljqu8aSW8fan2teTlZWFORNB44E+hK8+OA24FPA4cDnwS+J2mMpIOBxcCZEXEocBKwssQ2jwRuAv4bcCTwGPCmvajWZuAc4E+BC4GrJL1xCO/lYGA58C3glcAc4F8kTckV+0/AFcChQF9yuwA4GzgMOAb4NvBxYAzwA+BWSQfltpEv/xpgPvCXaZ+cAazbi/dqTcrJwprF9yU9B2wg+3K+PMXfC/wgIn4QETsjYjnQCZyVlu8E/kLSn0TEpoh4qMS2zwIeiogbI2I78EXgyaFWLCJuj4jHIvNT4MfAXw1h1XOAdRHxtYjYERG/Ar4HnJcrc0tE/Dy9txdSbHFEbIiI54HzgdsjYnmq+xeAPyFLjJQo/xIwApgiaXhErIuIx4b6Xq15OVlYszg3/RI+GfhzsiMAgInAeekUzO8k/Q54MzA2Iv5I9mV6EbBJ0u2S/rzEtl9NloQAiOzumxtKlCtJ0pmS7k2nkn5HlnyOLLdeqvsJA+reAbwqV6ZUPfKxVwPrc3XfmZaPK1U+IrrIjkIWAZslXS/p1UOoqzU5JwtrKumX+9fJfkFD9kX4bxFxWO5xcER8NpW/IyJOA8YCjwLXltjsJuDovhlJys8DfwRG5eZflSs7guxo4AvAURFxGNmpIFHeBuCnA+p+SET8Xf4tl1gvH/stWdIZWPeNg20jIr4VEW9O6wVw5RDqak3OycKa0ReB0yS9Afgm8A5JZ0gaJmlkurZhvKSjJM1ObQPbgD+QnZYa6HZgqqR3p0brj9H/1/1K4C2SJkh6Bf17Yh1EdlqnB9gh6UxgqF1ybwOOlfQ+ScPT4y/zDdRDcANwtqS3SxoO/EN6r78oVVjSayW9LSW5F4DnKb1PrMU4WVjTiYge4BvAf4+IDcBs4L+SfWFvAP4L2d/+AcDFZL++nwHeCvxdie09TdZO8FmgF5gM/Dy3fDnwHWAVsILsS75v2XNkyeUG4FmyBullQ3wfz5Elljmpjk+S/cofMZT10zbWkLXb/B/gaeAdZN2MXxxklRFk7/Pp9HqvpAW7Idvu5MGPzMysHB9ZmJlZWU4WZmZWlpOFmZmV5WRhZmZlNe2Nw4488shoa2urdzXMzAplxYoVT0fEmIHxpk0WbW1tdHZ21rsaZmaFIml9qbhPQ5mZWVlOFmZmVpaThZmZldW0bRalbN++ne7ubl544YXyhW1IRo4cyfjx4xk+fHi9q2JmVdRSyaK7u5tDDz2UtrY2sptv2v6ICHp7e+nu7mbSpEn1ro6ZVVFLnYZ64YUXOOKII5woKkQSRxxxhI/UGtHSpdDWBgcckD0vXVrvGlnBtdSRBeBEUWHenw1o6VKYNw+2bs3m16/P5gE6OupXLyu0ljqyMGsJCxe+nCj6bN2axc32kZNFDfX29jJt2jSmTZvGq171KsaNG7dr/sUXBxteINPZ2cnHPvaxfX7tr3/968yfP3+PZe6++25+8YuSY+JYkfzmN3sXNxuCljsNVU9HHHEEK1euBGDRokUccsghfPKTn9y1fMeOHRx4YOmPpL29nfb29qrW7+677+aQQw7hpJNOqurrWJVNmJCdeioVN9tHPrLYkxo0Er7//e/noosu4oQTTuCSSy7h/vvvZ+bMmUyfPp2TTjqJNWvWANkX+TnnnANkieYDH/gAJ598MscccwyLFy8uue2vfe1rHHvssRx//PH8/Oe7Bnbj1ltv5YQTTmD69OmceuqpPPXUU6xbt45rrrmGq666imnTpvGzn/2sZDnbT7VoeL7iChg1qn9s1KgsbravIqIpHzNmzIiBHn744d1ig/rmNyNGjYqAlx+jRmXxCrj88svj85//fMydOzfOPvvs2LFjR0REbNmyJbZv3x4REcuXL493v/vdERHxk5/8JM4+++xd686cOTNeeOGF6OnpicMPPzxefPHFftv/7W9/G0cffXRs3rw5tm3bFieddFJ85CMfiYiIZ555Jnbu3BkREddee21cfPHF/erUZ7ByA+3Vfm1lVf6b2u21Jk6MkLLnaryGNSWgM0p8p/o01GD21EhY4R4l5513HsOGDQNgy5YtzJ07l7Vr1yKJ7du3l1zn7LPPZsSIEYwYMYJXvvKVPPXUU4wfP37X8vvuu4+TTz6ZMWOym0eef/75/PrXvway603OP/98Nm3axIsvvjjoNRJDLWdDVMO/KTo63PPJKsqnoQZTw0bCgw8+eNf0P/7jP3LKKaewevVqbr311kGvYRgxYsSu6WHDhrFjx44hv95HP/pR5s+fz4MPPsiXv/zlQV9jqOVsiAb87SzlAtp4ggPWP+5LIazhOVkMZrDGwCo3Em7ZsoVx48YBWQ+mfXXCCSfw05/+lN7eXrZv3853v/vdkq9x3XXX7YofeuihPPfcc2XL2T7K/e0s5QLmcS3raSM4YNelEE4Y1qicLAZTp0bCSy65hMsuu4zp06fv1dHCQGPHjmXRokXMnDmTN73pTbzuda/btWzRokWcd955zJgxgyOPPHJX/B3veAc333zzrgbuwcrZPsr9TS3kM2zl4H6LS14K4SuxrVGUashohsd+N3BHuJFwiNzAvRfS35R4qV87d99DGlC2Vg3iZgmDNHD7yGJPOjpg3TrYuTN7doOh7a/0NzVhYul/vX5nOX0ltjUQJwuzOhjSWU5fiW0NpKrJQtJrJa3MPX4v6eOSFknamIuflVvnMkldktZIOiMXn5ViXZIWVLPeZtXW0QFLlsDEiSBlz0uWDDh4rVMnC7NSqnqdRUSsAaYBSBoGbARuBi4EroqIL+TLS5oCzAGmAq8G7pR0bFr8JeA0oBt4QNKyiHi4mvU3q6ayl0JccUX/u8eCr8S2uqnlaai3A49FRImb1uwyG7g+IrZFxBNAF3B8enRFxOMR8SJwfSpr1ryGdPhhVhu1TBZzgG/n5udLWiXpq5JGp9g4YEOuTHeKDRbvR9I8SZ2SOnt6eipbe7MK2OuesO5k0fBapXdzTZKFpIOAdwJ9V4ZdDbyG7BTVJuCfKvE6EbEkItojor3vNheNZH9uUQ57dwvxtrY2nn766T2W+cxnPjOkbVll9I1JtH591g/WF+IVXyt9prU6sjgT+PeIeAogIp6KiJciYidwLdlpJsjaNI7OrTc+xQaLF0rfLcpXrlzJRRddxCc+8Yld8wcddFDZ9Ss93oSTRW25J2zzaaXPtFbJ4gJyp6Akjc0texewOk0vA+ZIGiFpEjAZuB94AJgsaVI6SpmTylZVLQ4vV6xYwVvf+lZmzJjBGWecwaZNmwBYvHgxU6ZM4bjjjmPOnDklbyGe19vby+mnn87UqVP50Ic+RHZtTebcc89lxowZTJ06lSVLlgCwYMECnn/+eaZNm0ZHOrVRqpxVjnvCNp+W+kxLXalXyQdwMNALvCIX+zfgQWAV2Zf+2NyyhcBjwBrgzFz8LODXadnCcq+7v1dwV/vi2csvvzw+97nPxcyZM2Pz5s0REXH99dfHhRdeGBERY8eOjRdeeCEiIp599tld6+RvIZ730Y9+ND71qU9FRMRtt90WQPT09ERERG9vb0REbN26NaZOnRpPP/10REQcfPDB/bYxWLlyfAX30EycuPsV25DFrZia8TOlXldwR8QfI+KIiNiSi70vIl4fEcdFxDsjYlNu2RUR8ZqIeG1E/DAX/0FEHJuWVb3vYC0OL7dt28bq1as57bTTmDZtGp/+9Kfp7u4G4LjjjqOjo4NvfvObg46el3fPPffw3ve+F8huXz569OhdyxYvXswb3vAGTjzxRDZs2MDatWtLbmOo5RpWg7c0ekyi5tNKn6nHsxhELQ4vI4KpU6fyy1/+crdlt99+O/fccw+33norV1xxBQ8++OA+vcbdd9/NnXfeyS9/+UtGjRrFySefXPJW40Mt17D6Whr7MnxfSyM0TA+ivmosXJj9HU2YkH2pNEj1bB+00mfq230MohYXz44YMYKenp5dyWL79u089NBD7Ny5kw0bNnDKKadw5ZVXsmXLFv7whz/sdgvxvLe85S1861vfAuCHP/whzz77LJDdZnz06NGMGjWKRx99lHvvvXfXOsOHD981uNKeyhVCQVoa3RO2+bTKZ+pkMYhaHF4ecMAB3HjjjVx66aW84Q1vYNq0afziF7/gpZde4r3vfS+vf/3rmT59Oh/72Mc47LDDdruFeN7ll1/OPffcw9SpU7npppuYkLLarFmz2LFjB6973etYsGABJ5544q515s2bt+t0157KFUJLtTSa1Z4i12ummbS3t0dnZ2e/2COPPNJvXIdyli5tjcPL/bW3+7Uq2tqyU08DTZyY/dwzsyGRtCIi2gfGfWSxB61yeNkUWqml0awOnCysOfg+SmZV1XLJollPu9VLQ+1PHwpagTR4T+/dtFSyGDlyJL29vY31BVdgEUFvby8jR46sd1XMCqWI95RqqQbu7du3093dXazrBxrcyJEjGT9+PMOHD693VcwKo5H7YwzWwN1SF+UNHz6cSZMm1bsaZtbiitjTu6VOQ5mZNYIijpjrZGFmVmNV6+ldxVZzJwszsxqrSk/vKreat1QDt5lZ06pQq7mv4DYza2ZVbjV3sjAzawZVbjWverKQtE7Sg5JWSupMscMlLZe0Nj2PTnFJWiypS9IqSW/MbWduKr9W0txq19vMrFCqfH+0Wh1ZnBIR03LnwRYAd0XEZOCuNA9wJtm425OBecDVkCUX4HLgBOB44PK+BGPW8op23wirjirfH61eF+XNBk5O09cBdwOXpvg30jiw90o6TNLYVHZ5RDwDIGk5MAv4dm2rbdZgCjBCoNVQR0fVPvdaHFkE8GNJKySlv2KOyo27/SRwVJoeB2zIrdudYoPF+5E0T1KnpM6enp5KvgezxlSQEQKt+GpxZPHmiNgo6ZXAckmP5hdGREiqSP/diFgCLIGs62wltmnW0Ip43wgrpKofWUTExvS8GbiZrM3hqXR6ifS8ORXfCBydW318ig0WN2ttRbxvhBVSVZOFpIMlHdo3DZwOrAaWAX09muYCt6TpZcDfpF5RJwJb0umqO4DTJY1ODdunp5hZa/MIgVYj1T4NdRRws6S+1/pWRPxI0gPADZI+CKwH/jqV/wFwFtAFbAUuBIiIZyT9T+CBVO5/9DV2m7W0vsZMDxZvVebbfZiZ2S6+3YeZme0zJwszMyvLycKswnxBtTWjlhpW1azafEG1NSsfWZhVkC+otmblZGFWQb6g2pqVk4VZBfmCamtWThZmFeQLqq1ZOVmYVVCVhxQwqxv3hjKrsCoOKWBWNz6yMDOzspwszMysLCcLM7MCqvWdAtxmYWZWMPW4U4CPLMzMCqYedwpwsjAzK5h63CnAycLMrGDqcaeAqiULSUdL+omkhyU9JOnvU3yRpI2SVqbHWbl1LpPUJWmNpDNy8Vkp1iVpQbXqbGZWBPW4U0A1G7h3AP8QEf8u6VBghaTladlVEfGFfGFJU4A5wFTg1cCdko5Ni78EnAZ0Aw9IWhYRD1ex7mZmDaseQ69XLVlExCZgU5p+TtIjwLg9rDIbuD4itgFPSOoCjk/LuiLicQBJ16eyThZm1rJqfaeAmrRZSGoDpgP3pdB8SaskfVXS6BQbB2zIrdadYoPFS73OPEmdkjp7enoq+A7MzFpb1ZOFpEOA7wEfj4jfA1cDrwGmkR15/FOlXisilkREe0S0jxkzplKbNTNreVVNFpKGkyWKpRFxE0BEPBURL0XETuBaXj7VtBE4Orf6+BQbLG7NxANXmzW0avaGEvAV4JGI+F+5+NhcsXcBq9P0MmCOpBGSJgGTgfuBB4DJkiZJOoisEXxZteptddB3Oer69RDx8uWoThhmDaOaRxZvAt4HvG1AN9nPSXpQ0irgFOATABHxEHADWcP1j4CPpCOQHcB84A7gEeCGVNaaRREGrvaRj7U4RUS961AV7e3t0dnZWe9q2FAccEB2RDGQBDt31r4+Aw28EQ9kndo9qpE1IUkrIqJ9YNxXcFv9NfrA1UU48jGrMicLq79GH7i6HjfiMWswThZWf40+cHWjH/mY1YCThTWGjg5Yty5ro1i3rnESBTT+kY9ZDThZmJXT6Ec+1eaeYIaThRVVrb/AGvnIp5p8DYwlThZWPP4Cqx33BLPEycKKx19gteOeYJY4WVjx+AusdtwTzBInCysef4HVTpF7grlhvqKcLKx4ivwFVjRF7QnWoO1aRc5fvjeUFdPSpbUdU9KKpa0tSxADTZyY9Warg6LcYmywe0M5WZhZ82nAm1M2YP4qyTcSNLPWUel2rQqcPyp6vwwnCzNrPpVs16pQ+0fR+2U4WZhZ86lkw3yFrusper8Mt1mYme1JBds/itAvo/BtFpJmSVojqUvSgnrXx8xaRAXPHxX5FmOFSBaShgFfAs4EpgAXSJpS31qZ7YUid7BvdUU/f1QhhUgWwPFAV0Q8HhEvAtcDs+tcJ7OhadALxGyIinphYoUVos1C0nuAWRHxoTT/PuCEiJg/oNw8YB7AhAkTZqwv1anZrNaK0sHejCZosxiKiFgSEe0R0T5mzJh6V8csU/QO9tXg03KFU5RksRE4Ojc/PsXMGl/RO9hXmk/LFVJRksUDwGRJkyQdBMwBltW5TmZD4wbS/jweSSEVIllExA5gPnAH8AhwQ0Q8VN9amQ2RG0j782m5QipEA/e+8EV5Zg3KDf4NrSUauM2sAHxarpCcLMystnxarpAOrHcFzKwFdXQ4ORSMjyzMzKwsJwszMyvLycLMzMpysjAzs7KcLMzMrCwnCzMzK8vJwszMynKyMDOzspwszMysLCcLMzMry8nCzMzKcrIwM7OynCzMzKwsJwszMyurKslC0uclPSpplaSbJR2W4m2Snpe0Mj2uya0zQ9KDkrokLZakFD9c0nJJa9Pz6GrU2czMBletI4vlwF9ExHHAr4HLcssei4hp6XFRLn418LfA5PSYleILgLsiYjJwV5o3M7MaqkqyiIgfR8SONHsvMH5P5SWNBf40Iu6NbFDwbwDnpsWzgevS9HW5uJmZ1Ugt2iw+APwwNz9J0q8k/VTSX6XYOKA7V6Y7xQCOiohNafpJ4KjBXkjSPEmdkjp7enoqVH0zM9vnYVUl3Qm8qsSihRFxSyqzENgBLE3LNgETIqJX0gzg+5KmDvU1IyIkxR6WLwGWALS3tw9azszM9s4+J4uIOHVPyyW9HzgHeHs6tUREbAO2pekVkh4DjgU20v9U1fgUA3hK0tiI2JROV23e1zqbmdm+qVZvqFnAJcA7I2JrLj5G0rA0fQxZQ/bj6TTT7yWdmHpB/Q1wS1ptGTA3Tc/Nxc3MrEaq1Wbxz8ChwPIBXWTfAqyStBK4EbgoIp5Jyz4M/CvQBTzGy+0cnwVOk7QWODXNm1Xc0qXQ1gYHHJA9L11abg2z1qF0hqjptLe3R2dnZ72rYQWxdCnMmwdbt74cGzUKliyBjo761cus1iStiIj2gXFfwW0GLFzYP1FANr9wYX3qY9ZonCys+gpwfuc3v9m7uFmrcbKw6uo7v7N+PURkz/PmNVzCmDBh7+JmrcbJwqqrIOd3rrgia6PIGzUqi5uZk4VVW0HO73R0ZI3ZEyeClD27cdvsZft8UZ7ZkEyYkJ16KhVvMB0dTg5mg/GRhVWXz+/Y3ihAZ4hW5WRh1eXzOzZUBekM0ap8UZ6ZNYa2ttKnLCdOhHXral2bluWL8syssRWkM0SrcrIws8bgi10ampOFmTUGd4ZoaE4WZtYY3Bmiofk6CzNrHL7YpWH5yMLMzMpysjAzs7KcLMzMrKyqJQtJiyRtTMOqrpR0Vm7ZZZK6JK2RdEYuPivFuiQtyMUnSbovxb8j6aBq1dvMzHZX7SOLqyJiWnr8AEDSFGAOMBWYBfyLpGGShgFfAs4EpgAXpLIAV6Zt/RnwLPDBKtfbzMxy6nEaajZwfURsi4gngC7g+PToiojHI+JF4HpgtiQBbwNuTOtfB5xbh3qbmbWsaieL+ZJWSfqqpNEpNg7YkCvTnWKDxY8AfhcROwbEdyNpnqROSZ09PT2VfB9mZi1tv5KFpDslrS7xmA1cDbwGmAZsAv6pAvXdo4hYEhHtEdE+ZsyYar+cmVnL2K+L8iLi1KGUk3QtcFua3QgcnVs8PsUYJN4LHCbpwHR0kS9vZmY1UM3eUGNzs+8CVqfpZcAcSSMkTQImA/cDDwCTU8+ng8gawZdFdg/1nwDvSevPBW6pVr3NzGx31Wyz+JykByWtAk4BPgEQEQ8BNwAPAz8CPhIRL6WjhvnAHcAjwA2pLMClwMWSusjaML5SxXpbi/NgbWa78+BHZjl9g7Vt3fpybNQo38/OWocHPzIbgoUL+ycKyOYXLqxPfcwahZOFWY4HazMrzcnCLMeDtZmV5mRhluPB2sxKc7Iwy2nqwdrczcv2g0fKMxugKQdrG9jNa/36bB6a8M1aNfjIwqwVuJuX7ScnC7NW4G5etp+cLMxagbt52X5ysjBrBe7mZfvJycKsFTR1Ny+rBfeGMmsVTdnNy2rFRxZmZlaWk4WZmZXlZGFmZmU5WZiZWVlVSRaSviNpZXqsk7QyxdskPZ9bdk1unRlpZL0uSYslKcUPl7Rc0tr0PLoadTYzs8FVJVlExPkRMS0ipgHfA27KLX6sb1lEXJSLXw38LdmY3JOBWSm+ALgrIiYDd6V5MzOroaqehkpHB38NfLtMubHAn0bEvZGN8/oN4Ny0eDZwXZq+Lhc3M7MaqXabxV8BT0XE2lxskqRfSfqppL9KsXFAd65Md4oBHBURm9L0k8BRVa2xmZntZp8vypN0J/CqEosWRsQtafoC+h9VbAImRESvpBnA9yVNHeprRkRIij3UaR4wD2CC73ljZlYx+5wsIuLUPS2XdCDwbmBGbp1twLY0vULSY8CxwEZgfG718SkG8JSksRGxKZ2u2ryHOi0BlgC0t7cPmlTMzGzvVPM01KnAoxGx6/SSpDGShqXpY8gash9Pp5l+L+nE1M7xN0Df0ckyYG6anpuLm5lZjVQzWcxh94bttwCrUlfaG4GLIuKZtOzDwL8CXcBjwA9T/LPAaZLWkiWgz1axzmaleUhSa3HKOh81n/b29ujs7Kx3NawZDBySFLLbe/uurdaEJK2IiPaBcV/BbfVRpF/qHpLUzLcotzoY+Et9/fpsHhrzl7qHJDXzkYXVQdF+qXtIUjMnC6uDov1S95CkZk4WVgdF+6XuIUnNnCysDor4S72jA9atg507s2cnimIrUgeLBuFkYbXnX+pWT30dLNavh4iXO1g4YeyRr7Mws9bS1pYliIEmTsyOGlucr7MwM4PidbBoEE4WZtZaitbBokE4WZhZayliB4sG4GRhZq3FHSz2iW/3YWatp6PDyWEv+cjCzMzKcrIwM7OynCzMzKwsJwszMytrv5KFpPMkPSRpp6T2Acsuk9QlaY2kM3LxWSnWJWlBLj5J0n0p/h1JB6X4iDTflZa37U+dzcxs7+3vkcVq4N3APfmgpClkY3BPBWYB/yJpmKRhwJeAM4EpwAWpLMCVwFUR8WfAs8AHU/yDwLMpflUqZ2ZmNbRfySIiHomINSUWzQauj4htEfEE0AUcnx5dEfF4RLwIXA/MliTgbcCNaf3rgHNz27ouTd8IvD2VNzOzGqlWm8U4YENuvjvFBosfAfwuInYMiPfbVlq+JZXfjaR5kjoldfb09FTorZiZWdlkIelOSatLPGbXooJ7IyKWRER7RLSPGTOm3tUxay4eA6Kllb2COyJO3YftbgSOzs2PTzEGifcCh0k6MB095Mv3batb0oHAK1J5M6uVvjEg+sZO7xsDAnwldIuo1mmoZcCc1JNpEjAZuB94AJicej4dRNYIviyyQTV+ArwnrT8XuCW3rblp+j3A/41mHYTDrFEtXPhyouizdWsWt5awv11n3yWpG5gJ3C7pDoCIeAi4AXgY+BHwkYh4KR01zAfuAB4BbkhlAS4FLpbURdYm8ZUU/wpwRIpfDOzqbmtmNeIxIFqeR8ozs/I8ulzL8Eh5ZrbvPAZEy3OyMLPyPAZEy/N4FmY2NB4DoqX5yMLMzMpysjAzs7KcLMzMrCwnCzMzK8vJwszMymrai/Ik9QAlriIakiOBpytYnVpz/euryPUvct3B9a+EiRGx251YmzZZ7A9JnaWuYCwK17++ilz/ItcdXP9q8mkoMzMry8nCzMzKcrIobUm9K7CfXP/6KnL9i1x3cP2rxm0WZmZWlo8szMysLCcLMzMry8liAEmzJK2R1CWpbqPySTpa0k8kPSzpIUl/n+KHS1ouaW16Hp3ikrQ41XuVpDfmtjU3lV8raW4uPkPSg2mdxZJUhfcxTNKvJN2W5idJui+95nfS8LqkIXi/k+L3SWrLbeOyFF8j6YxcvKqflaTDJN0o6VFJj0iaWZT9L+kT6e9mtaRvSxrZyPte0lclbZa0Oher+qefKAcAAAQTSURBVL4e7DUqVP/Pp7+dVZJulnRYbtle7dd9+ewqLiL8SA9gGPAYcAxwEPAfwJQ61WUs8MY0fSjwa2AK8DlgQYovAK5M02cBPwQEnAjcl+KHA4+n59FpenRadn8qq7TumVV4HxcD3wJuS/M3AHPS9DXA36XpDwPXpOk5wHfS9JT0OYwAJqXPZ1gtPivgOuBDafog4LAi7H9gHPAE8Ce5ff7+Rt73wFuANwKrc7Gq7+vBXqNC9T8dODBNX5mr/17v17397KrxqNmXXxEeZGOJ35Gbvwy4rN71SnW5BTgNWAOMTbGxwJo0/WXgglz5NWn5BcCXc/Evp9hY4NFcvF+5CtV5PHAX8DbgtvSP+nTuH2jX/iYbl31mmj4wldPAz6CvXLU/K+AVZF+4GhBv+P1Pliw2kH1pHpj2/RmNvu+BNvp/2VZ9Xw/2GpWo/4Bl7wKWltpf5fbrvvzfVOr/IP/waaj++v7J+nSnWF2lQ8vpwH3AURGxKS16EjgqTQ9W9z3Fu0vEK+mLwCXAzjR/BPC7iNhR4jV31TMt35LK7+37qpRJQA/wNWWn0f5V0sEUYP9HxEbgC8BvgE1k+3IFxdn3fWqxrwd7jUr7ANkRDWXqWSq+L/83Fedk0eAkHQJ8D/h4RPw+vyyynxMN2fdZ0jnA5ohYUe+67KMDyU4rXB0R04E/kp2m2KVR93867z6bLOG9GjgYmFXXSu2nWuzrar2GpIXADmBppbddS04W/W0Ejs7Nj0+xupA0nCxRLI2Im1L4KUlj0/KxwOYUH6zue4qPLxGvlDcB75S0Drie7FTU/wYOk9Q3nG/+NXfVMy1/BdBbpv7V/Ky6ge6IuC/N30iWPIqw/08FnoiInojYDtxE9nkUZd/3qcW+Huw1KkLS+4FzgI6UjPal/r3s/WdXedU4t1XUB9mvycfJfpH1NTBNrVNdBHwD+OKA+Ofp3yD3uTR9Nv0b/e5P8cPJzr2PTo8ngMPTsoGNfmdV6b2czMsN3N+lf0Pdh9P0R+jfUHdDmp5K/8bAx8kaAqv+WQE/A16bphelfd/w+x84AXgIGJW2fR3w0Ubf9+zeZlH1fT3Ya1So/rOAh4ExA8rt9X7d28+uKv/H1dpwUR9kPS1+TdYrYWEd6/FmskPiVcDK9DiL7HzkXcBa4M7cP4OAL6V6Pwi057b1AaArPS7MxduB1Wmdf6ZKDWP0TxbHpH/crvQPMCLFR6b5rrT8mNz6C1Md15DrMVTtzwqYBnSmz+D76QuoEPsf+BTwaNr+v6Uvpobd98C3ydpXtpMd1X2wFvt6sNeoUP27yNoT+v5/r9nX/bovn12lH77dh5mZleU2CzMzK8vJwszMynKyMDOzspwszMysLCcLMzMry8nCzMzKcrIwM7Oy/j/VqvNPricE7AAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.scatter(lm.predict(X_train), lm.predict(X_train) - y_train, color = 'red', label = 'Train data')\n",
        "plt.scatter(lm.predict(X_test), lm.predict(X_test) - y_test, color = 'blue', label = 'Test data')\n",
        "plt.hlines(xmin = 0, xmax = 50, y = 0, linewidth = 3)\n",
        "plt.title('Residual errors')\n",
        "plt.legend(loc = 0)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "8IsbPalq62jq",
        "outputId": "1b34c6d2-ce42-4e30-ca7b-f73f1d2b3666",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training set score: 0.9489148127897334\n",
            "Test set score: 0.9627668685473267\n"
          ]
        }
      ],
      "source": [
        "print(\"Training set score:\",lm.score(X_train,y_train))\n",
        "\n",
        "print(\"Test set score:\",lm.score(X_test,y_test))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "tHbdYvrP62jr",
        "outputId": "7d6a2680-e884-4c35-e1f9-ec28823ad0dc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter Years of Experience : 2.1\n",
            "Years of Experience given :  2.1\n",
            "Predicted Salary :  [[45638.41584647]]\n"
          ]
        }
      ],
      "source": [
        "user_ip=input('Enter Years of Experience : ')\n",
        "yrexp=np.array(float(user_ip))\n",
        "yrexp=yrexp.reshape(-1,1)\n",
        "sal=lm.predict(yrexp)\n",
        "print('Years of Experience given : ',float(user_ip))\n",
        "print('Predicted Salary : ',sal)"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3.9.7 64-bit",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "orig_nbformat": 4,
    "vscode": {
      "interpreter": {
        "hash": "df13f10ace87b946fd57f957f4f2f2ab7ca87e3da9ec89264fcaface418ff5c7"
      }
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}